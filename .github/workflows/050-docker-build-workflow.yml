name: docker-build-workflow
on:
  push:
    branches: main
  pull_request:
    branches: main
  workflow_dispatch: null
jobs:
  build-container:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Create  artifact dist folder
        run: |
          mkdir dist
          sudo apt update
          sudo apt install tar gzip build-essential
          ls
          cd  dist
#       - name: Unzip image 
#         run: tar -zxvf my-app-dotnet.tar.gz
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
#       - name: Build and push
#         uses: docker/build-push-action@v4
#         with:
#           push: true
#           context: 03-app-dotnet
#           dockerfile: Dockerfile
#           tags: ${{ secrets.DOCKERHUB_USERNAME }}/my-app-dotnet:latest
      - name: Build the Docker image
        working-directory: 03-app-dotnet
        run: |
         docker build . --file Dockerfile --tag my-app-dotnet:$(date +%s)
         docker save my-app-dotnet > my-image.tar
         ls
         gzip my-image.tar
         ls -lh my-image.tar.gz
    #         run: docker build . --file Dockerfile --tag my-app-dotnet:$(date +%s)
#       - name: upload all aritifacts
#         uses: actions/upload-artifact@v3
#         with:
#           name: dist
#           path: ./03-app-dotnet
#       - name: tar file
#         uses: nxtlvlsoftware/tar-ops-action@v1
#         with:
#           operation: compress
#           files: dist
#           outPath: ./dist.tgz
#       - name: Build and push
#         uses: docker/build-push-action@v4
#         with:
#           push: true
#           context: 03-app-dotnet
#           file: Dockerfile
#           tags: ${{ secrets.DOCKERHUB_USERNAME }}/my-app:new
#       - name: validate all input
#         run: |
#           pwd
#           ls 
#           cd dist
#       - name: download artifact
#         uses: actions/download-artifact@v3
#         with:
#           name: dist
#       - name: validate output
#         run: |
#           pwd
#           ls
#       - name: tar folder
#         uses: nxtlvlsoftware/tar-ops-action@v1
#         with:
#           operation: compress
#           files: dist
#           outPath: ./dist.tgz
